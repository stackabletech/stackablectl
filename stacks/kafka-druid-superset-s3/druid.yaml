---
apiVersion: druid.stackable.tech/v1alpha1
kind: DruidCluster
metadata:
  name: druid
spec:
  version: 0.23.0-stackable0.1.0
  zookeeperConfigMapName: druid-znode
  metadataStorageDatabase:
    dbType: derby
    connString: jdbc:derby://localhost:1527/var/druid/metadata.db;create=true
    host: localhost
    port: 1527
  deepStorage:
    s3:
      bucket:
        inline:
          bucketName: druid
          connection:
            inline:
              host: minio-druid
              port: 9000
              accessStyle: Path
              credentials:
                secretClass: druid-s3-credentials
      baseKey: data
  brokers:
    roleGroups:
      default:
        replicas: 1
  coordinators:
    roleGroups:
      default:
        replicas: 1
  historicals:
    roleGroups:
      default:
        replicas: 1
  middleManagers:
    roleGroups:
      default:
        # We use multiple middle-managers to be able to run multiple ingestion jobs simultaneously.
        # If we need even more slots, the configuration maxNumConcurrentSubTasks should increase the number of slots
        # without increasing the number of middleManagers.
        replicas: 2
  routers:
    roleGroups:
      default:
        replicas: 1
---
apiVersion: zookeeper.stackable.tech/v1alpha1
kind: ZookeeperZnode
metadata:
  name: druid-znode
spec:
  clusterRef:
    name: zookeeper
---
apiVersion: secrets.stackable.tech/v1alpha1
kind: SecretClass
metadata:
  name: druid-s3-credentials
spec:
  backend:
    k8sSearch:
      searchNamespace:
        pod: {}
---
apiVersion: v1
kind: Secret
metadata:
  name: druid-s3-credentials
  labels:
    secrets.stackable.tech/class: druid-s3-credentials
stringData:
  accessKey: druid
  secretKey: druiddruid
