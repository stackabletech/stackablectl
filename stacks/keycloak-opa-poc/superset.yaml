apiVersion: superset.stackable.tech/v1alpha1
kind: SupersetCluster
metadata:
  name: superset
spec:
  image:
    productVersion: 2.1.0
    stackableVersion: 23.7.0
  clusterConfig:
    credentialsSecret: superset-credentials
    listenerClass: external-unstable
    authentication:
      - authenticationClass: keycloak
        oidc:
          clientCredentialsSecret: superset-keycloak-client
        userRegistrationRole: Admin # For easier demo purposes
  nodes:
    roleGroups:
      default:
        replicas: 1
    # configOverrides:
    #   superset_config.py:
    #     AUTH_TYPE: AUTH_OAUTH
    #     AUTH_USER_REGISTRATION: "true"
    #     AUTH_USER_REGISTRATION_ROLE: Gamma
    #     OAUTH_PROVIDERS: |-
    #       [
    #         { 'name': 'keycloak',
    #           'icon': 'fa-key',
    #           'token_key': 'access_token',
    #           'remote_app': {
    #             'client_id': 'superset',
    #             'client_secret': f'{os.environ.get("SUPERSET_CLIENT_SECRET")}',
    #             'api_base_url': f'http://{os.environ.get("KEYCLOAK_ADDRESS")}/realms/master/protocol/openid-connect',
    #             'client_kwargs': {
    #               'scope': 'email profile openid'
    #             },
    #             'access_token_url': f'http://{os.environ.get("KEYCLOAK_ADDRESS")}/realms/master/protocol/openid-connect/token',
    #             'authorize_url': f'http://{os.environ.get("KEYCLOAK_ADDRESS")}/realms/master/protocol/openid-connect/auth',
    #             'request_token_url': None,
    #           },
    #         }
    #       ]
    # podOverrides:
    #   spec:
    #     containers:
    #       - name: superset
    #         env:
    #           - name: KEYCLOAK_ADDRESS
    #             valueFrom:
    #               configMapKeyRef:
    #                 name: keycloak
    #                 key: KEYCLOAK
    #           - name: SUPERSET_CLIENT_SECRET
    #             valueFrom:
    #               secretKeyRef:
    #                 name: keycloak-client-secrets
    #                 key: superset
---
apiVersion: v1
kind: Secret
metadata:
  name: superset-keycloak-client
stringData:
  clientId: superset
  clientSecret: "supersetsuperset" # "{{ keycloakSupersetClientSecret }}"
---
apiVersion: v1
kind: Secret
metadata:
  name: superset-credentials
type: Opaque
stringData:
  adminUser.username: admin
  adminUser.firstname: Superset
  adminUser.lastname: Admin
  adminUser.email: admin@superset.com
  adminUser.password: will-not-be-used # as we use auth/oidc
  connections.secretKey: foobarlameinternet # "{{ supersetSecretKey }}"
  connections.sqlalchemyDatabaseUri: postgresql://superset:superset@postgresql-superset/superset
