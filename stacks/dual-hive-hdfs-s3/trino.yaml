---
apiVersion: trino.stackable.tech/v1alpha1
kind: TrinoCatalog
metadata:
  name: hivehdfs
  labels:
    trino: trino
spec:
  connector:
    hive:
      metastore:
        configMap: hive-hdfs
      hdfs:
        configMap: hdfs
---
apiVersion: trino.stackable.tech/v1alpha1
kind: TrinoCatalog
metadata:
  name: hives3
  labels:
    trino: trino
spec:
  connector:
    hive:
      metastore:
        configMap: hive-s3
      s3:
        reference: minio
  configOverrides:
    hive.iceberg-catalog-name: iceberg
---
apiVersion: trino.stackable.tech/v1alpha1
kind: TrinoCatalog
metadata:
  name: iceberg
  labels:
    trino: trino
spec:
  connector:
    iceberg:
      metastore:
        configMap: hive-s3
      s3:
        reference: minio
  configOverrides:
    iceberg.hive-catalog-name: hives3
---
apiVersion: trino.stackable.tech/v1alpha1
kind: TrinoCatalog
metadata:
  name: tpcds
  labels:
    trino: trino
spec:
  connector:
    tpcds: {}
---
apiVersion: trino.stackable.tech/v1alpha1
kind: TrinoCluster
metadata:
  name: trino
spec:
  image:
    productVersion: "414"
    stackableVersion: "23.7"
  clusterConfig:
    authorization:
      opa:
        configMapName: opa
        package: trino
    catalogLabelSelector:
      matchLabels:
        trino: trino
    listenerClass: external-unstable
  coordinators:
    roleGroups:
      default:
        replicas: 1
  workers:
    roleGroups:
      default:
        replicas: 1
---
apiVersion: opa.stackable.tech/v1alpha1
kind: OpaCluster
metadata:
  name: opa
spec:
  image:
    productVersion: 0.51.0
    stackableVersion: "23.7"
  servers:
    roleGroups:
      default:
        replicas: 1
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: trino-opa-bundle
  labels:
    opa.stackable.tech/bundle: "trino"
data:
  trino.rego: |
    package trino
    default allow = false

    allow {
      input.context.identity.user == "admin"
    }

    allow {
      input.context.identity.user == "demo"
    }
