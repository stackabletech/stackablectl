---
apiVersion: trino.stackable.tech/v1alpha1
kind: TrinoCluster
metadata:
  name: trino
spec:
  image:
    productVersion: "414"
    stackableVersion: 0.0.0-dev
  clusterConfig:
    listenerClass: external-unstable
    catalogLabelSelector:
      matchLabels:
        trino: trino
    authentication:
      - authenticationClass: trino-users
    authorization:
      opa:
        configMapName: opa
        package: trino
  coordinators:
    config:
      queryMaxMemory: 10TB
      resources:
        cpu:
          min: "2"
          max: "4"
        memory:
          limit: '6Gi'
    roleGroups:
      default:
        replicas: 1
  workers:
    config:
      queryMaxMemoryPerNode: 6GB
      resources:
        cpu:
          min: "2"
          max: "4"
        memory:
          limit: '12Gi'
    roleGroups:
      default:
        replicas: 1
---
apiVersion: authentication.stackable.tech/v1alpha1
kind: AuthenticationClass
metadata:
  name: trino-users
spec:
  provider:
    static:
      userCredentialsSecret:
        name: trino-users
---
apiVersion: v1
kind: Secret
metadata:
  name: trino-users
type: kubernetes.io/opaque
stringData:
  admin: "{{ trinoAdminPassword }}"
---
# As the demo needs to have access to Trino using the admin user we need to store the password somewhere
apiVersion: v1
kind: Secret
metadata:
  name: trino-credentials
stringData:
  admin: "{{ trinoAdminPassword }}"
---
apiVersion: trino.stackable.tech/v1alpha1
kind: TrinoCatalog
metadata:
  name: lakehouse
  labels:
    trino: trino
spec:
  connector:
    iceberg:
      metastore:
        configMap: hive-iceberg
      s3:
        reference: minio
---
apiVersion: trino.stackable.tech/v1alpha1
kind: TrinoCatalog
metadata:
  name: tpcds
  labels:
    trino: trino
spec:
  connector:
    tpcds: {}
---
apiVersion: trino.stackable.tech/v1alpha1
kind: TrinoCatalog
metadata:
  name: tpch
  labels:
    trino: trino
spec:
  connector:
    tpch: {}
---
apiVersion: opa.stackable.tech/v1alpha1
kind: OpaCluster
metadata:
  name: opa
spec:
  image:
    productVersion: 0.45.0
    stackableVersion: "23.4"
  servers:
    roleGroups:
      default:
        selector:
          matchLabels:
            kubernetes.io/os: linux
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: trino-opa-bundle
  labels:
    opa.stackable.tech/bundle: "trino"
data:
  trino.rego: |
    package trino

    default allow = false

    allow {
      input.context.identity.user == "admin"
    }
