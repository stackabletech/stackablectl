---
_templates:
  - helmChart: &template-minio-druid
      releaseName: minio-druid
      name: minio
      repo:
        name: minio
        url: https://charts.min.io/
      version: 4.0.15
      options:
        rootUser: admin
        rootPassword: adminadmin
        mode: standalone
        persistence:
          size: 15Gi
        users:
          - accessKey: druid
            secretKey: druiddruid
            policy: readwrite
        buckets:
          - name: druid
            policy: public
        resources:
          requests:
            memory: 2Gi
        service:
          type: NodePort
          nodePort: null
        consoleService:
          type: NodePort
          nodePort: null
  - helmChart: &template-minio-trino
      releaseName: minio-trino
      name: minio
      repo:
        name: minio
        url: https://charts.min.io/
      version: 4.0.15
      options:
        rootUser: admin
        rootPassword: adminadmin
        mode: standalone
        persistence:
          size: 10Gi
        users:
          - accessKey: trino
            secretKey: trinotrino
            policy: readwrite
          - accessKey: hive
            secretKey: hivehive
            policy: readwrite
          - accessKey: demo
            secretKey: demodemo
            policy: readwrite
        buckets:
          - name: demo
            policy: public
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
        service:
          type: NodePort
          nodePort: null
        consoleService:
          type: NodePort
          nodePort: null
  - helmChart: &template-minio-distributed
      releaseName: minio
      name: minio
      repo:
        name: minio
        url: https://charts.min.io/
      version: 4.0.15
      options:
        rootUser: admin
        rootPassword: adminadmin
        mode: distributed
        replicas: 5
        persistence:
          size: 250Gi
        users:
          - accessKey: trino
            secretKey: trinotrino
            policy: readwrite
          - accessKey: hive
            secretKey: hivehive
            policy: readwrite
          - accessKey: demo
            secretKey: demodemo
            policy: readwrite
        buckets:
          - name: staging
            policy: public
          - name: lakehouse
            policy: public
        resources:
          requests:
            cpu: 500m
            memory: 2Gi
        service:
          type: NodePort
          nodePort: null
        consoleService:
          type: NodePort
          nodePort: null
  - helmChart: &template-postgresql-hive
      releaseName: postgresql-hive
      name: postgresql
      repo:
        name: bitnami
        url: https://charts.bitnami.com/bitnami/
      version: 10.16.2
      options:
        # Old version (10) of helm-charts has old way of setting credentials
        postgresqlUsername: hive
        postgresqlPassword: hive
        postgresqlDatabase: hive
  - helmChart: &template-postgresql-hive-iceberg
      releaseName: postgresql-hive-iceberg
      name: postgresql
      repo:
        name: bitnami
        url: https://charts.bitnami.com/bitnami/
      version: 10.16.2
      options:
        # Old version (10) of helm-charts has old way of setting credentials
        postgresqlUsername: hive
        postgresqlPassword: hive
        postgresqlDatabase: hive
  - helmChart: &template-postgresql-druid
      releaseName: postgresql-druid
      name: postgresql
      repo:
        name: bitnami
        url: https://charts.bitnami.com/bitnami/
      version: 11.0.0
      options:
        auth:
          username: druid
          password: druid
          database: druid
  - helmChart: &template-postgresql-superset
      releaseName: postgresql-superset
      name: postgresql
      repo:
        name: bitnami
        url: https://charts.bitnami.com/bitnami/
      version: 11.0.0
      options:
        auth:
          username: superset
          password: superset
          database: superset
  - helmChart: &template-postgresql-airflow
      releaseName: postgresql-airflow
      name: postgresql
      repo:
        name: bitnami
        url: https://charts.bitnami.com/bitnami/
      version: 11.0.0
      options:
        auth:
          username: airflow
          password: airflow
          database: airflow
  - helmChart: &template-redis-airflow
      releaseName: redis-airflow
      name: redis
      repo:
        name: bitnami
        url: https://charts.bitnami.com/bitnami/
      version: 16.13.2
      options:
        auth:
          password: airflow
        replica:
          replicaCount: 1
  - helmChart: &template-opensearch
      releaseName: opensearch
      name: opensearch
      repo:
        name: opensearch
        url: https://opensearch-project.github.io/helm-charts
      version: 2.8.0
      options:
        config:
          opensearch.yml: |
            plugins:
              security:
                # Use default security settings
                allow_default_init_securityindex: true
                # Allow communication between the nodes which use the
                # certificates generated by the secret-operator
                nodes_dn:
                  - CN=generated certificate for pod
                # Use the certificate generated by the secret-operator
                ssl:
                  http:
                    # Enable TLS on the REST layer
                    enabled: true
                    pemcert_filepath: certs/tls.crt
                    pemkey_filepath: certs/tls.key
                    pemtrustedcas_filepath: certs/ca.crt
                  transport:
                    pemcert_filepath: certs/tls.crt
                    pemkey_filepath: certs/tls.key
                    pemtrustedcas_filepath: certs/ca.crt
                    # Disable the verification of hostnames because
                    # internal IPs are used which are not included in
                    # the certificates generated by the secret-operator.
                    enforce_hostname_verification: false
        securityConfig:
          path: /usr/share/opensearch/config/opensearch-security
          internalUsersSecret: opensearch-internal-users
        extraEnvs:
          # Disable the creation of demo certificates
          - name: DISABLE_INSTALL_DEMO_CONFIG
            value: "true"
        extraVolumeMounts:
          # Mount the certificate generated by the secret-operator
          - name: tls
            mountPath: /usr/share/opensearch/config/certs
        extraVolumes:
          # Request a TLS certificate from the secret-operator
          - name: tls
            ephemeral:
              volumeClaimTemplate:
                metadata:
                  annotations:
                    secrets.stackable.tech/class: tls
                    # Add the service opensearch-cluster-master to the
                    # distinguished names because this service is used
                    # by Vector.
                    secrets.stackable.tech/scope: |-
                      service=opensearch-cluster-master
                spec:
                  storageClassName: secrets.stackable.tech
                  accessModes:
                    - ReadWriteOnce
                  resources:
                    requests:
                      storage: 1
        extraObjects:
          - apiVersion: v1
            kind: Secret
            metadata:
              name: opensearch-internal-users
            stringData:
              internal_users.yml: |
                ---
                # This is the internal user database.
                # The hash value is a bcrypt hash.

                _meta:
                  type: "internalusers"
                  config_version: 2

                admin:
                  hash: "$2y$12$H8Sro/AECPTvvM8iUYKIEO74AhHm46McG3BGntSkNlVkdjB7cQUo6"
                  reserved: true
                  backend_roles:
                    - "admin"
                  description: "Demo admin user"

                kibanaserver:
                  hash: "$2y$12$M9Yw0bLcDjadK0gd6r00Ye5PQztHP9ZzxkRo4AVCvxABFU/mVWGgu"
                  reserved: true
                  description: "Demo OpenSearch Dashboards user"
          - apiVersion: v1
            kind: Secret
            metadata:
              name: opensearch-user
            stringData:
              username: admin
              password: adminadmin
          - apiVersion: v1
            kind: Secret
            metadata:
              name: opensearch-dashboards-user
            stringData:
              username: kibanaserver
              password: kibanaserverkibanaserver
              cookie: NmOcOdfZbEMEHPwri7Y6Gybhw2k3O9UX
  - helmChart: &template-opensearch-dashboards
      releaseName: opensearch-dashboards
      name: opensearch-dashboards
      repo:
        name: opensearch-dashboards
        url: https://opensearch-project.github.io/helm-charts
      version: 2.6.0
      options:
        service:
          type: NodePort
          port: 5601
          annotations:
            stackable.tech/logging-view-logs: |-
              /app/discover?security_tenant=global#/view/logs
            stackable.tech/logging-credentials-secret: opensearch-user
        opensearchAccount:
          secret: opensearch-dashboards-user
        lifecycle:
          postStart:
            exec:
              command:
                - bash
                - -c
                - |
                  #!/bin/bash
                  curl \
                      --retry-connrefused \
                      --retry 120 \
                      --retry-delay 5 \
                      --header "Content-Type:application/json" \
                      --header "osd-xsrf:true" \
                      --header "securitytenant: global" \
                      --data '{
                                "attributes": {
                                  "title": "vector-*",
                                  "timeFieldName": "timestamp"
                                 }
                              }' \
                      "http://admin:adminadmin@127.0.0.1:5601/api/saved_objects/index-pattern/vector-*"
                  curl \
                      --header "Content-Type:application/json" \
                      --header "osd-xsrf:true" \
                      --header "securitytenant: global" \
                      --data '{
                                "attributes": {
                                  "title":"Logs",
                                  "columns": ["pod", "container", "logger", "level", "message"],
                                  "kibanaSavedObjectMeta": {
                                    "searchSourceJSON": "{\"indexRefName\": \"kibanaSavedObjectMeta.searchSourceJSON.index\"}"
                                  }
                                },
                                "references": [
                                  {
                                    "id": "vector-*",
                                    "name": "kibanaSavedObjectMeta.searchSourceJSON.index",
                                    "type": "index-pattern"
                                  }
                                ]
                              }' \
                      http://admin:adminadmin@127.0.0.1:5601/api/saved_objects/search/logs
  - helmChart: &template-vector-aggregator
      releaseName: vector-aggregator
      name: vector
      repo:
        name: vector
        url: https://helm.vector.dev
      version: 0.18.0
      options:
        role: Aggregator
        customConfig:
          sources:
            vector:
              address: 0.0.0.0:6000
              type: vector
              version: "2"
          sinks:
            opensearch:
              type: elasticsearch
              inputs:
                - vector
              endpoints:
                - https://opensearch-cluster-master.default.svc.cluster.local:9200
              mode: bulk
              api_version: v8
              tls:
                # Add the certificate of the Certificate Authority
                # generated by the secret-operator so that the
                # OpenSearch service can be verified
                ca_file: /certs/ca.crt
              auth:
                strategy: basic
                user: admin
                password: adminadmin
        extraVolumeMounts:
          # Use the certificate generated by the secret-operator
          - name: tls
            mountPath: /certs
        extraVolumes:
          - name: tls
            ephemeral:
              volumeClaimTemplate:
                metadata:
                  annotations:
                    secrets.stackable.tech/class: tls
                    secrets.stackable.tech/scope: pod
                spec:
                  storageClassName: secrets.stackable.tech
                  accessModes:
                    - ReadWriteOnce
                  resources:
                    requests:
                      storage: 1
  - helmChart: &template-postgresql-hivehdfs
      releaseName: hivehdfs
      name: postgresql
      repo:
        name: bitnami
        url: https://charts.bitnami.com/bitnami/
      version: 10.16.2
      options:
        postgresqlUsername: hive
        postgresqlPassword: hive
        postgresqlDatabase: hivehdfs
  - helmChart: &template-postgresql-hives3
      releaseName: hives3
      name: postgresql
      repo:
        name: bitnami
        url: https://charts.bitnami.com/bitnami/
      version: 10.16.2
      options:
        postgresqlUsername: hive
        postgresqlPassword: hive
        postgresqlDatabase: hives3

stacks:
  airflow:
    description: Stack containing Airflow scheduling platform
    stackableRelease: 22.11
    labels:
      - airflow
    manifests:
      - helmChart: *template-postgresql-airflow
      - helmChart: *template-redis-airflow
      - plainYaml: https://raw.githubusercontent.com/stackabletech/stackablectl/main/stacks/airflow/airflow.yaml
  data-lakehouse-iceberg-trino-spark:
    description: Data lakehouse using Iceberg lakehouse on S3, Trino as query engine, Spark for streaming ingest and Superset for data visualization
    stackableRelease: 22.11
    labels:
      - iceberg
      - trino
      - spark
      - superset
      - kafka
      - nifi
      - minio
      - s3
    manifests:
      - helmChart: *template-minio-distributed
      - helmChart: *template-postgresql-hive
      - helmChart: *template-postgresql-hive-iceberg
      - helmChart: *template-postgresql-superset
      - plainYaml: https://raw.githubusercontent.com/stackabletech/stackablectl/main/stacks/data-lakehouse-iceberg-trino-spark/hive-metastores.yaml
      - plainYaml: https://raw.githubusercontent.com/stackabletech/stackablectl/main/stacks/data-lakehouse-iceberg-trino-spark/trino.yaml
      - plainYaml: https://raw.githubusercontent.com/stackabletech/stackablectl/main/stacks/data-lakehouse-iceberg-trino-spark/zookeeper.yaml
      - plainYaml: https://raw.githubusercontent.com/stackabletech/stackablectl/main/stacks/data-lakehouse-iceberg-trino-spark/kafka.yaml
      - plainYaml: https://raw.githubusercontent.com/stackabletech/stackablectl/main/stacks/data-lakehouse-iceberg-trino-spark/nifi.yaml
      - plainYaml: https://raw.githubusercontent.com/stackabletech/stackablectl/main/stacks/kafka-druid-superset-s3/superset.yaml # Reuse
  hdfs-hbase:
    description: HBase cluster using HDFS as underlying storage
    stackableRelease: 22.11
    labels:
      - hbase
      - hdfs
    manifests:
      - plainYaml: https://raw.githubusercontent.com/stackabletech/stackablectl/main/stacks/hdfs-hbase/zookeeper.yaml
      - plainYaml: https://raw.githubusercontent.com/stackabletech/stackablectl/main/stacks/hdfs-hbase/hdfs.yaml
      - plainYaml: https://raw.githubusercontent.com/stackabletech/stackablectl/main/stacks/hdfs-hbase/hbase.yaml
  kafka-druid-superset-s3:
    description: Stack containing Kafka, MinIO, Druid and Superset for data visualization
    stackableRelease: 22.11
    labels:
      - kafka
      - druid
      - superset
      - minio
      - s3
    manifests:
      - helmChart: *template-minio-druid
      - helmChart: *template-postgresql-superset
      - plainYaml: https://raw.githubusercontent.com/stackabletech/stackablectl/main/stacks/kafka-druid-superset-s3/zookeeper.yaml
      - plainYaml: https://raw.githubusercontent.com/stackabletech/stackablectl/main/stacks/kafka-druid-superset-s3/kafka.yaml
      - plainYaml: https://raw.githubusercontent.com/stackabletech/stackablectl/main/stacks/kafka-druid-superset-s3/druid.yaml
      - plainYaml: https://raw.githubusercontent.com/stackabletech/stackablectl/main/stacks/kafka-druid-superset-s3/superset.yaml
  nifi-kafka-druid-superset-s3:
    description: Stack containing NiFi, Kafka, Druid, MinIO and Superset for data visualization
    stackableRelease: 22.11
    labels:
      - nifi
      - kafka
      - druid
      - superset
      - minio
      - s3
    manifests:
      - helmChart: *template-minio-druid
      - helmChart: *template-postgresql-druid
      - helmChart: *template-postgresql-superset
      - plainYaml: https://raw.githubusercontent.com/stackabletech/stackablectl/main/stacks/kafka-druid-superset-s3/zookeeper.yaml # Reuse
      - plainYaml: https://raw.githubusercontent.com/stackabletech/stackablectl/main/stacks/kafka-druid-superset-s3/kafka.yaml # Reuse
      - plainYaml: https://raw.githubusercontent.com/stackabletech/stackablectl/main/stacks/kafka-druid-superset-s3/druid.yaml # Reuse
      - plainYaml: https://raw.githubusercontent.com/stackabletech/stackablectl/main/stacks/kafka-druid-superset-s3/superset.yaml # Reuse
      - plainYaml: https://raw.githubusercontent.com/stackabletech/stackablectl/main/stacks/nifi-kafka-druid-superset-s3/nifi.yaml
  spark-trino-superset-s3:
    description: Stack containing MinIO, Trino and Superset for data visualization
    stackableRelease: 22.11
    labels:
      - trino
      - superset
      - minio
      - s3
    manifests:
      - helmChart: *template-minio-trino
      - helmChart: *template-postgresql-hive
      - helmChart: *template-postgresql-hive-iceberg
      - helmChart: *template-postgresql-superset
      - plainYaml: https://raw.githubusercontent.com/stackabletech/stackablectl/main/stacks/spark-trino-superset-s3/hive-metastore.yaml
      - plainYaml: https://raw.githubusercontent.com/stackabletech/stackablectl/main/stacks/spark-trino-superset-s3/trino.yaml
      - plainYaml: https://raw.githubusercontent.com/stackabletech/stackablectl/main/stacks/spark-trino-superset-s3/superset.yaml
  trino-superset-s3:
    description: Stack containing MinIO, Trino and Superset for data visualization
    stackableRelease: 22.11
    labels:
      - trino
      - superset
      - minio
      - s3
    manifests:
      - helmChart: *template-minio-trino
      - helmChart: *template-postgresql-hive
      - helmChart: *template-postgresql-superset
      - plainYaml: https://raw.githubusercontent.com/stackabletech/stackablectl/main/stacks/trino-superset-s3/hive-metastore.yaml
      - plainYaml: https://raw.githubusercontent.com/stackabletech/stackablectl/main/stacks/trino-superset-s3/trino.yaml
      - plainYaml: https://raw.githubusercontent.com/stackabletech/stackablectl/main/stacks/trino-superset-s3/superset.yaml
  dual-hive-hdfs-s3:
    description: Dual stack Hive on HDFS and S3 for Hadoop/Hive to Trino migration
    stackableRelease: 22.11
    labels:
      - trino
      - hive
      - hdfs
      - s3
    manifests:
      - helmChart: *template-postgresql-hivehdfs
      - helmChart: *template-postgresql-hives3
      - helmChart: *template-minio-trino
      - plainYaml: https://raw.githubusercontent.com/stackabletech/stackablectl/main/stacks/dual-hive-hdfs-s3/hdfs.yaml
      - plainYaml: https://raw.githubusercontent.com/stackabletech/stackablectl/main/stacks/dual-hive-hdfs-s3/hive.yaml
      - plainYaml: https://raw.githubusercontent.com/stackabletech/stackablectl/main/stacks/dual-hive-hdfs-s3/trino.yaml
  logging:
    description: Stack containing OpenSearch, OpenSearch Dashboards, and Vector
    stackableRelease: 22.11-logging
    labels:
      - logging
      - opensearch
      - opensearch-dashboards
      - vector
    manifests:
      - helmChart: *template-opensearch
      - helmChart: *template-opensearch-dashboards
      - helmChart: *template-vector-aggregator
      - plainYaml: https://raw.githubusercontent.com/stackabletech/stackablectl/logging/stacks/logging/vector-aggregator-discovery.yaml
