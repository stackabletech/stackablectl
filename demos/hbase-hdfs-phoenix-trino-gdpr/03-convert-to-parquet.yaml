---
apiVersion: batch/v1
kind: Job
metadata:
  name: convert-to-parquet
spec:
  template:
    spec:
      containers:
        - name: convert-to-parquet
          image: "bitnami/python:latest"
          command: ["bash", "-c", "pip3 install pandas minio fastparquet && \  
                                   python3 -u /tmp/script/script.py --input_file category_tree.tgz item_properties.tgz && sleep infinity"]
          volumeMounts:
            - name: script
              mountPath: /tmp/script
      volumes:
        - name: script
          configMap:
            name: transform-parquet
      restartPolicy: OnFailure
  backoffLimit: 50
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: transform-parquet
data:
  script.py: |
    import argparse
    import hashlib
    import pandas as pd
    from minio import Minio
    import tarfile
    import fastparquet
  
    def parse_args():
      parser = argparse.ArgumentParser(
      description=""
      )
    
      parser.add_argument('-i','--input_file', nargs='+', help='<Required> Set flag', required=True)            
      
      return parser.parse_args()
    
    def transform_to_parquet(BUCKET_NAME, INPUT_FILE, LOCAL_FILE_PATH, MINIO_CLIENT):
      CSV_FILE_NAME = INPUT_FILE.replace('tgz','csv')
      OUTPUT_FILE_NAME = INPUT_FILE.replace('tgz','parquet')
      DIR = INPUT_FILE.replace('.tgz','')
      INPUT_FILE = str(INPUT_FILE)
      
      MINIO_CLIENT.fget_object(BUCKET_NAME, 'tgz/' + INPUT_FILE, LOCAL_FILE_PATH + INPUT_FILE) 
      
      file = tarfile.open(LOCAL_FILE_PATH + INPUT_FILE)
      file.extractall(LOCAL_FILE_PATH)
            
      df = pd.read_csv(LOCAL_FILE_PATH + CSV_FILE_NAME)                                        
      
      df.to_parquet(LOCAL_FILE_PATH + OUTPUT_FILE_NAME)
    
      result = MINIO_CLIENT.fput_object(BUCKET_NAME, '/' + DIR + '/' + OUTPUT_FILE_NAME, LOCAL_FILE_PATH + OUTPUT_FILE_NAME)    
      print("created {0} object; etag: {1}, version-id: {2}".format(
            result.object_name, result.etag, result.version_id,),)
    
      data = pd.read_parquet(LOCAL_FILE_PATH + OUTPUT_FILE_NAME)
      print(data.head())
      print(data.count())          


    def main():
      
      args = parse_args()
      
      LOCAL_FILE_PATH = '/tmp/'
      ACCESS_KEY = 'demo'
      SECRET_KEY = 'demodemo'
      BUCKET_NAME = 'demo-bucket'                       
      MINIO_HOST = 'minio-trino'
      MINIO_PORT = '9000'
      MINIO_CLIENT = Minio(MINIO_HOST + ':' + MINIO_PORT, access_key=ACCESS_KEY, secret_key=SECRET_KEY, secure=False)      
    
      input_files = args.input_file
      
      for input_file in input_files:                                
        transform_to_parquet(BUCKET_NAME, input_file, LOCAL_FILE_PATH, MINIO_CLIENT)          
    
    if __name__ == "__main__":
      main()